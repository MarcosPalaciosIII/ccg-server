{"version":3,"sources":["services/pet-service.js","components/navbar.js","components/pets-components/all-pets.js","components/pets-components/pet-details.js","components/pets-components/seed.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","getAllPets","service","get","then","response","data","addPet","post","petDetails","petId","petSeed","console","log","axios","create","baseURL","withCredentials","this","Navbar","className","to","src","alt","Component","AllPets","state","allPets","location","type","breed","gender","setPets","setState","catch","err","filteredArray","forEach","onePet","sex","push","theFilteredArray","filterPets","map","i","class","key","pathname","_id","image","name","refId","birthDate","e","target","value","onChange","handleChange","id","showFilter","showPets","PetDetails","props","getPetDetails","showPet","seed","a","seeding","App","exact","path","render","allThePets","component","Seed","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9455fb61.chunk.js","sourcesContent":["\nimport axios from 'axios';\n\nclass AuthService {\nconstructor() {\n  let service = axios.create({\n    baseURL:\n    process.env.NODE_ENV === 'production' ? '/pets' : 'http://localhost:5000/pets',\n    withCredentials: true\n  });\n  this.service = service;\n}\n\n\n  getAllPets = () => {\n    return this.service.get('/')\n    .then(response => response.data);\n  };\n\n  addPet = data => {\n    return this.service.post('/add', {data})\n    .then(response => response.data);\n  };\n\n\n  petDetails = petId => {\n    return this.service.get(`/details/${petId}`)\n    .then(response => response.data);\n  };\n\n  petSeed = () => {\n    console.log(\"seeding db\");\n    return this.service.get(`/seed`)\n    .then(response => response.data);\n  };\n\n}\n\nexport default AuthService;\n","import React, { Component } from 'react';\n\nimport '../styles/navbar.css';\n\nimport { Link } from 'react-router-dom';\n\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar\">\n        <div>\n          <Link to='/'> <img src=\"/images/petland.jpg\" alt=\"petland logo\" /> </Link>\n        </div>\n        <div>\n          <Link to='#'>AVAILABLE PUPPIES</Link>\n          <Link to='#'>PERKS</Link>\n          <Link to='#'>BREEDS</Link>\n          <Link to='#'>PRODUCTS</Link>\n          <Link to='#'>CARES</Link>\n          <Link to='#'>FINANCING</Link>\n          <Link to='#'>ABOUT</Link>\n          <Link to='#'>CONTACT</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport AuthService from '../../services/pet-service';\n\nimport './all-pets.css';\n\nimport { Link } from 'react-router-dom';\n\n\nclass AllPets extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allPets: [],\n      location: \"All\",\n      type: \"All\",\n      breed: \"All\",\n      gender: \"All\"\n    };\n    this.service = new AuthService();\n  }\n\n\n\n  componentDidMount() {\n    this.setPets();\n  }\n\n\n\n  setPets() {\n    this.service.getAllPets()\n    .then(response => {\n      this.setState({allPets: response});\n    }).catch(err => console.log(\"error getting pets\", err));\n  }\n\n\n\n  filterPets() {\n    let filteredArray = [];\n    // check if all filtered criteria meet in order to add pet to display list\n    this.state.allPets.forEach(onePet => {\n      if(onePet.location === this.state.location) {\n        if(onePet.type === this.state.type || this.state.type === \"All\"){\n          if(onePet.breed === this.state.breed || this.state.breed === \"All\") {\n            if(onePet.sex === this.state.gender || this.state.gender === \"All\") {\n              filteredArray.push(onePet);\n            }\n          }\n        }\n      } else if(onePet.type === this.state.type) {\n        if(onePet.location === this.state.location || this.state.location === \"All\"){\n          if(onePet.breed === this.state.breed || this.state.breed === \"All\") {\n            if(onePet.sex === this.state.gender || this.state.gender === \"All\") {\n              filteredArray.push(onePet);\n            }\n          }\n        }\n      } else if(onePet.breed === this.state.breed) {\n        if(onePet.type === this.state.type || this.state.type === \"All\"){\n          if(onePet.location === this.state.location || this.state.location === \"All\") {\n            if(onePet.sex === this.state.gender || this.state.gender === \"All\") {\n              filteredArray.push(onePet);\n            }\n          }\n        }\n      } else if(onePet.sex === this.state.gender) {\n        if(onePet.type === this.state.type || this.state.type === \"All\"){\n          if(onePet.breed === this.state.breed || this.state.breed === \"All\") {\n            if(onePet.location === this.state.location || this.state.location === \"All\") {\n              filteredArray.push(onePet);\n            }\n          }\n        }\n      }\n\n    });\n\n    return filteredArray;\n  }\n\n\n\n  showPets() {\n    let theFilteredArray = this.state.allPets;\n    if(this.state.location !== \"All\" || this.state.type !== \"All\" || this.state.breed !== \"All\" ||this.state.gender !== \"All\") {\n      theFilteredArray = this.filterPets();\n    }\n    return theFilteredArray.map((onePet, i) => {\n      return (\n        <div class=\"petCard\" key={i}>\n          <Link to={{\n            pathname: '/details',\n            state: {\n              petId: onePet._id\n            }\n          }} >\n            <div>\n            <div>\n            <img src={onePet.image} alt={onePet.name} />\n            </div>\n\n            <div>\n            <h5>{onePet.type} • {onePet.sex} • REF ID: {onePet.refId} • {onePet.birthDate}</h5>\n            </div>\n\n            <div>\n            <h3><b>{onePet.name}</b> • <span>{onePet.breed}</span></h3>\n            </div>\n\n            <div>\n            <h5 className=\"locationText\"><img src=\"/images/locationWhite.png\" alt=\"location icon\" />Location: {onePet.location}</h5>\n            </div>\n\n            </div>\n          </Link>\n        </div>\n      )\n    });\n\n  }\n\n\n\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n\n\n  showFilter() {\n    return (\n      <div className=\"filterSection\">\n        <div>\n          <img src=\"/images/filter-icon.svg\" alt=\"filter icon\" />\n          <h5> Filter By: </h5>\n        </div>\n        <div>\n          <div>\n            <h6>Location</h6>\n            <select\n            className=\"filterInput\"\n            name=\"location\"\n            onChange={(e) => {this.handleChange(e)}}\n            value={this.state.location}\n            >\n            <option value=\"All\">All</option>\n            <option value=\"Miami\">Miami</option>\n            <option value=\"Hollywood\">Hollywood</option>\n            <option value=\"Jupiter\">Jupiter</option>\n            <option value=\"Pembroke Pines\">Pembroke Pines</option>\n            <option value=\"Kendall\">Kendall</option>\n            </select>\n          </div>\n\n          <div>\n            <h6>Pet Type</h6>\n            <select\n            className=\"filterInput\"\n            name=\"type\"\n            onChange={(e) => {this.handleChange(e)}}\n            value={this.state.type}\n            >\n            <option value=\"All\">All</option>\n            <option value=\"Dog\">Dog</option>\n            <option value=\"Cat\">Cat</option>\n            </select>\n          </div>\n\n          <div>\n            <h6>Breed</h6>\n            <select\n            className=\"filterInput\"\n            name=\"breed\"\n            onChange={(e) => {this.handleChange(e)}}\n            value={this.state.breed}\n            >\n            <option value=\"All\">All</option>\n            <option value=\"American Bulldog\">American Bulldog</option>\n            <option value=\"Mini Australian Shepherd\">Mini Australian Shepherd</option>\n            <option value=\"Ragdoll\">Ragdoll</option>\n            <option value=\"Persian\">Persian</option>\n            <option value=\"Scottish Fold\">Scottish Fold</option>\n            <option value=\"Bengal\">Bengal</option>\n            <option value=\"Siberian Husky\">Siberian Husky</option>\n            <option value=\"Alaskan Malamute\">Alaskan Malamute</option>\n            </select>\n          </div>\n\n          <div>\n            <h6>Gender</h6>\n            <select\n            className=\"filterInput\"\n            name=\"gender\"\n            onChange={(e) => {this.handleChange(e)}}\n            value={this.state.gender}\n            >\n            <option value=\"All\">All</option>\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            </select>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n\n\n\n  render() {\n    return (\n      <div id=\"all-pets-main\">\n        <div>\n          <h4> AVAILABLE </h4>\n          <h2> PUPPIES </h2>\n        </div>\n        <div>\n        {this.showFilter()}\n        </div>\n        <div>\n          {this.showPets()}\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\n\nexport default AllPets;\n","import React, { Component } from 'react';\nimport AuthService from '../../services/pet-service';\n\nimport './all-pets.css';\n\n\nclass PetDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      petDetails: null\n    };\n    this.service = new AuthService();\n  }\n\n  componentDidMount() {\n    // this.getPetDetails();\n    this.setState({petDetails: this.getPetDetails()}, function() {\n      console.log(\"state <<<< here >>>> \", this.state);\n    });\n  }\n\n  getPetDetails() {\n    console.log(\"pet id from details component >>>> \", this.props.location.state.onePet);\n    this.service.petDetails(this.props.location.state.petId)\n    .then(response => {\n      console.log(\"this is the response for details >>>>>>>>>>> /////// \", response);\n      this.setState({petDetails: response}, function() {\n        console.log('this is the state after getting details %^%^%%^^%^%^%^^^%^ ', this.state);\n        return response;\n      });\n    }).catch(err => console.log(\"error getting pet details \", err));\n  }\n\n\n  showPet() {\n    // console.log(\"the props }}}}}}} \", this.props.location.state);\n\n    console.log(\"the current state of things -------------- \", this.state.petDetails);\n\n    return (\n      <div class=\"petDetailsCard\">\n        <div>\n          <div>\n            <img src={this.state.petDetails.image} alt={this.state.petDetails.name} />\n          </div>\n\n          <div>\n            <div>\n              <h3><b>Name: {this.state.petDetails.name}</b></h3>\n              <h3>Breed: {this.state.petDetails.breed}</h3>\n            </div>\n\n            <div>\n              <h5>Type: {this.state.petDetails.type}</h5>\n              <h5>Gender: {this.state.petDetails.sex}</h5>\n              <h5>REF ID: {this.state.petDetails.refId}</h5>\n              <h5>BirthDate: {this.state.petDetails.birthDate}</h5>\n            </div>\n\n            <div>\n              <h5>Location: {this.state.petDetails.location}</h5>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    )\n\n\n  };\n\n\n  render() {\n    return (\n      <div>\n        {this.state.petDetails && this.showPet()}\n\n      </div>\n    );\n  }\n\n\n}\n\n\nexport default PetDetails;\n","import React, { Component } from 'react';\nimport AuthService from '../../services/pet-service';\n\n\nclass AllPets extends Component {\n  render() {\n    let service = new AuthService();\n\n    let seed = async () => {\n      try {\n        let seeding = await service.petSeed();\n        console.log(\"seeding success >>>>> \", seeding);\n        return true\n      } catch(err) {console.log(\"Seeding Error <<<<>>>><<<<>>>> \", err); return false}\n    }\n\n    return (\n      <div>\n        {seed() && \"Seeding Complete, Check Console For Results\"}\n      </div>\n    );\n  }\n\n\n}\n\n\nexport default AllPets;\n","import React, {Component} from 'react';\n// import logo from './logo.svg';\nimport AuthService from './services/pet-service';\n\nimport './App.css';\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Navbar from './components/navbar';\nimport AllPets from './components/pets-components/all-pets';\nimport PetDetails from './components/pets-components/pet-details';\nimport Seed from './components/pets-components/seed';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      allPets: null\n    };\n  }\n\n\nrender(){\n  return (\n    <div className=\"App\">\n\n      <Navbar />\n\n\n      <Switch>\n        <Route exact path=\"/\" render={() => <AllPets allThePets={this.state.allPets}/>} />\n        <Route exact path=\"/details\" component={PetDetails} />\n        <Route exact path=\"/seed\" component={Seed} />\n      </Switch>\n    </div>\n  );\n}\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}